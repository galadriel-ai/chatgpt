import datetime
from typing import Optional

from sqlalchemy import Column
from sqlalchemy import DateTime
from sqlalchemy import String
from sqlalchemy import Boolean

from sqlalchemy import ForeignKey
from sqlalchemy.dialects.postgresql import UUID
from sqlalchemy.orm import declarative_base
from sqlalchemy.orm import sessionmaker
from uuid_extensions import uuid7

engine = None
session_maker: Optional[sessionmaker] = None

Base = declarative_base()


class UserProfile(Base):
    __tablename__ = "user_profile"

    id = Column(UUID(as_uuid=True), primary_key=True, default=uuid7)
    email = Column(String(), nullable=False)
    name = Column(String(), nullable=True)
    profile_picture = Column(String(), nullable=True)
    auth_provider = Column(String(), nullable=False)
    provider_id = Column(String(), nullable=False)
    is_email_verified = Column(Boolean(), nullable=False, default=False)
    last_login_at = Column(DateTime(), nullable=False)

    # Autogenerated
    created_at = Column(DateTime, nullable=False)
    last_updated_at = Column(
        DateTime, default=datetime.datetime.now(datetime.UTC), nullable=False
    )


class Chat(Base):
    __tablename__ = "chat"

    id = Column(UUID(as_uuid=True), primary_key=True, default=uuid7)
    user_profile_id = Column(
        UUID(as_uuid=True),
        ForeignKey(UserProfile.id),
        nullable=False,
    )
    title = Column(String(), nullable=False)

    # Autogenerated
    created_at = Column(DateTime, nullable=False)
    last_updated_at = Column(
        DateTime, default=datetime.datetime.now(datetime.UTC), nullable=False
    )


class Message(Base):
    __tablename__ = "message"

    id = Column(UUID(as_uuid=True), primary_key=True, default=uuid7)
    chat_id = Column(
        UUID(as_uuid=True),
        ForeignKey(Chat.id),
        nullable=False,
    )
    role = Column(String(), nullable=False)
    content = Column(String(), nullable=False)
    # Need to support function calls as well?
    model = Column(String(), nullable=True)

    # Autogenerated
    created_at = Column(DateTime, nullable=False)
    last_updated_at = Column(
        DateTime, default=datetime.datetime.now(datetime.UTC), nullable=False
    )
